{
  "openapi": "3.0.0",
  "info": {
    "version": "1",
    "title": "Todos App",
    "description": "Todos App Des"
  },
  "servers": [
    {
      "description": "SwaggerHub API Auto Mocking",
      "url": "https://virtserver.swaggerhub.com/herlianto/Todos/1"
    },
    {
      "description": "Production Server",
      "url": "https://herlianto-github.cloud.okteto.net"
    },
    {
      "description": "Testing Server",
      "url": "http://18.136.199.65:8000"
    }
  ],
  "paths": {
    "/users/register": {
      "post": {
        "summary": "Create New User",
        "tags": [
          "Users"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UsersSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Response200"
          },
          "400": {
            "$ref": "#/components/responses/Response400"
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "summary": "Login User",
        "tags": [
          "Users"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "AndrewPrasetyo"
                  },
                  "password": {
                    "type": "string",
                    "example": "Andrew123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Response200"
          },
          "400": {
            "$ref": "#/components/responses/Response400"
          },
          "404": {
            "$ref": "#/components/responses/Response404"
          }
        }
      }
    },
    "/users": {
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Get All Users",
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Response200"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "$ref": "#/components/responses/Response404"
          }
        }
      }
    },
    "/users/{userId}": {
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Get User By ID",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Response200"
          },
          "404": {
            "$ref": "#/components/responses/Response404"
          }
        }
      },
      "put": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Update User By ID",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Herlianto"
                  },
                  "password": {
                    "type": "string",
                    "example": "herlianto123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Response200"
          },
          "404": {
            "$ref": "#/components/responses/Response404"
          }
        }
      },
      "delete": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Delete User ID",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Response200"
          },
          "404": {
            "$ref": "#/components/responses/Response404"
          }
        }
      }
    },
    "/todos": {
      "post": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Create Todo",
        "tags": [
          "Todo"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "projectID": {
                    "type": "integer",
                    "example": 1
                  },
                  "Task": {
                    "type": "string",
                    "example": "makan ayam"
                  },
                  "Status": {
                    "type": "string",
                    "example": "completed"
                  },
                  "Description": {
                    "type": "string",
                    "example": "harus selesai tanggal 12 januari"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Response200"
          },
          "400": {
            "$ref": "#/components/responses/Response400"
          }
        }
      },
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Get all todos",
        "tags": [
          "Todo"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Response200"
          },
          "404": {
            "$ref": "#/components/responses/Response404"
          }
        }
      }
    },
    "/todos/{todoID}": {
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Get a user by ID",
        "tags": [
          "Todo"
        ],
        "parameters": [
          {
            "name": "todoID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Response200"
          },
          "404": {
            "$ref": "#/components/responses/Response404"
          }
        }
      },
      "put": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Update by ID",
        "tags": [
          "Todo"
        ],
        "parameters": [
          {
            "name": "todoID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "projectID": {
                    "type": "integer",
                    "example": 1
                  },
                  "Task": {
                    "type": "string",
                    "example": "makan sapi"
                  },
                  "Status": {
                    "type": "string",
                    "example": "not completed"
                  },
                  "Description": {
                    "type": "string",
                    "example": "harus selesai tanggal 14 januari"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Response200"
          },
          "404": {
            "$ref": "#/components/responses/Response404"
          }
        }
      },
      "delete": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Delete by ID",
        "tags": [
          "Todo"
        ],
        "parameters": [
          {
            "name": "todoID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Response200"
          },
          "404": {
            "$ref": "#/components/responses/Response404"
          }
        }
      }
    },
    "/projects": {
      "post": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Create New Project",
        "tags": [
          "Project"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "projectName": {
                    "type": "string",
                    "example": "Makan"
                  },
                  "userId": {
                    "type": "integer",
                    "example": 1
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Response200"
          },
          "400": {
            "$ref": "#/components/responses/Response400"
          }
        }
      },
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Get a user by ID",
        "tags": [
          "Project"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Response200"
          },
          "404": {
            "$ref": "#/components/responses/Response404"
          }
        }
      }
    },
    "/projects/{projectID}": {
      "put": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Update by ID",
        "tags": [
          "Project"
        ],
        "parameters": [
          {
            "name": "projectID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "projectName": {
                    "type": "string",
                    "example": "Minum"
                  },
                  "projectID": {
                    "type": "integer",
                    "example": 1
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Response200"
          },
          "404": {
            "$ref": "#/components/responses/Response404"
          }
        }
      },
      "delete": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Delete Projects by ProjectID and UserID",
        "tags": [
          "Project"
        ],
        "parameters": [
          {
            "name": "projectID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Response200"
          },
          "404": {
            "$ref": "#/components/responses/Response404"
          }
        }
      }
    },
    "/projects/all": {
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Get All Projects",
        "tags": [
          "Project"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Response200"
          },
          "404": {
            "$ref": "#/components/responses/Response404"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "responses": {
      "UnauthorizedError": {
        "description": "Access token is missing or invalid"
      },
      "Response200": {
        "description": "success create",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "number",
                  "example": 200
                },
                "message": {
                  "type": "string",
                  "example": "Successful Operation"
                }
              }
            }
          }
        }
      },
      "Response400": {
        "description": "bad request",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "number",
                  "example": 400
                },
                "message": {
                  "type": "string",
                  "example": "Bad Request"
                }
              }
            }
          }
        }
      },
      "Response404": {
        "description": "Not Fount",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "number",
                  "example": 404
                },
                "message": {
                  "type": "string",
                  "example": "Not Found"
                }
              }
            }
          }
        }
      }
    },
    "schemas": {
      "UsersSchema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "AndrewPrasetyo"
          },
          "password": {
            "type": "string",
            "example": "Andrew123"
          }
        }
      }
    }
  }
}